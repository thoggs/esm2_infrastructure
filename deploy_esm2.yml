---
- hosts: swarm_manager
  become: yes
  vars:
    ansible_python_interpreter: /opt/esm2_environ/bin/python3
    docker_host: "unix:///var/run/docker.sock"

  vars_files:
    - env.yml

  tasks:
    - name: Install Docker Collection (community.docker)
      ansible.builtin.command:
        cmd: ansible-galaxy collection install community.docker --force

    - name: Create certs directory
      ansible.builtin.file:
        path: ./stacks/esm2/backend/certs
        state: directory
        mode: '0755'

    - name: Create storage directory
      ansible.builtin.file:
        path: ./stacks/esm2/backend/storage
        state: directory
        mode: '0755'

    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install dependencies for Docker
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Remove existing Docker sources (se existirem)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu"
        state: absent

    - name: Create the /etc/apt/keyrings directory (if necessary)
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key to /etc/apt/keyrings
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository manually
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable"
        filename: docker.list
        update_cache: yes
        state: present

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is started and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create Docker network for sm_network (if not exists)
      community.docker.docker_network:
        name: sm_network
        state: present
        driver: overlay
        scope: swarm

    - name: Create Docker network for monitoring (if not exists)
      community.docker.docker_network:
        name: monitoring
        driver: overlay
        state: present
        scope: swarm

    - name: Ensure Python venv package is installed
      ansible.builtin.apt:
        name: python3-venv
        state: present

    - name: Create a virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/esm2_environ
        creates: /opt/esm2_environ/bin/activate

    - name: Install jsondiff and requests in the virtual environment
      ansible.builtin.command:
        cmd: /opt/esm2_environ/bin/pip install jsondiff requests docker

    - name: Set environment variable for Docker Host
      ansible.builtin.set_fact:
        DOCKER_HOST: "{{ docker_host }}"

    - name: Log in to Azure Container Registry
      community.docker.docker_login:
        registry_url: "{{ DOCKER_REGISTRY_URL }}"
        username: "{{ DOCKER_REGISTRY_USER }}"
        password: "{{ DOCKER_REGISTRY_PASSWORD }}"

    - name: Verify Docker login
      command: docker info

    - name: Initialize Docker Swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"

    - name: Create Docker Secrets
      include_tasks: stacks/esm2/secrets/create_secrets.yml

    - name: Generate backend Docker Swarm file (esm2)
      template:
        src: stacks/esm2/backend/docker-swarm.yml.j2
        dest: stacks/esm2/backend/docker-swarm.yml

    - name: Generate frontend Docker Swarm file (esm2)
      template:
        src: stacks/esm2/frontend/docker-swarm.yml.j2
        dest: stacks/esm2/frontend/docker-swarm.yml

    - name: Deploy the backend stack (esm2)
      community.docker.docker_stack:
        name: esm2
        state: present
        compose:
          - stacks/esm2/backend/docker-swarm.yml

    - name: Deploy the frontend stack (esm2)
      community.docker.docker_stack:
        name: esm2
        state: present
        compose:
          - stacks/esm2/frontend/docker-swarm.yml

    - name: Deploy the logging stack (monitoring)
      community.docker.docker_stack:
        name: monitoring
        state: present
        compose:
          - stacks/esm2/logging/docker-swarm.yml

    - name: Verify that the esm2 stack is running
      command: docker stack ps esm2
      register: result
      changed_when: false

    - name: Verify that the monitoring stack is running
      command: docker stack ps monitoring
      register: result
      changed_when: false

    - name: Show stack services status
      debug:
        var: result.stdout_lines